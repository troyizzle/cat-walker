ame: Ruby

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
    - run: bundle install
    - name: Rubocop
      run: bundle exec rubocop
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
    - run: docker-compose run web bundle exec rake db:test:prepare
    - name: RSpec
      run: docker-compose run web bundle exec rspec
    - run: docker-compose down
      with:
        ruby-version: 3.0.1
        
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    # required to compile pg ruby gem
    - name: install PostgreSQL client
      run: sudo apt-get install libpq-dev

    - name: Build and create DB
      env:
        # use localhost for the host here because we have specified a container for the job.
        # If we were running the job on the VM this would be postgres
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
        RAILS_ENV: test
      run: |
        gem install bundler
        bundle config path vendor/bundleame: Check Code

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
    - run: bundle install
    - name: Rubocop
      run: bundle exec rubocop
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
    - run: docker-compose run web bundle exec rake db:test:prepare
    - name: RSpec
      run: docker-compose run web bundle exec rspec
    - run: docker-compose down
        bundle install --jobs 4 --retry 3
        bin/rails db:setup
        yarn install
    - name: Test & publish code cover    
      uses: paambaati/codeclimate-action@v2.5.6
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE }} 
        RAILS_ENV: test
        RUBYOPT: -W:no-deprecated -W:no-experimental
        PGHOST: localhost
        PGUSER: postgres
        PGPORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port
      with:
        coverageCommand: bundle exec rspec
        coverageLocations: ${{github.workspace}}/coverage/simplecov.info:simplecov
        debug: true
